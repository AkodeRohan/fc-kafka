version: '3.8'

services:
  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"

  kafka:
    image: bitnami/kafka:latest
    depends_on:
      - zookeeper
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 3

  kafka-setup:
    image: bitnami/kafka:latest
    depends_on:
      kafka:
        condition: service_healthy
    restart: on-failure
    entrypoint: |
      bash -c '
      echo "Waiting for Kafka to be ready..."
      while ! kafka-topics.sh --bootstrap-server kafka:9092 --list; do
        sleep 2
      done

      echo "Creating topics..."
      kafka-topics.sh --create --if-not-exists \
        --bootstrap-server kafka:9092 \
        --topic your-topic-name \
        --partitions 3 \
        --replication-factor 1

      echo "Topics created:"
      kafka-topics.sh --list --bootstrap-server kafka:9092
      '
    volumes:
      - ./kafka-setup.sh:/kafka-setup.sh

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
